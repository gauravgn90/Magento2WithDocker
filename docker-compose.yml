---
version: '3.7'

services:
  magento:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.magento
      args:
        - NEW_RELIC_AGENT_VERSION=10.15.0.4
        - NEW_RELIC_LICENSE_KEY=0700f445042f534b5df3b6bba4635914FFFFNRAL
        - NEW_RELIC_APPNAME=myapp-with-new-relic
        - NEW_RELIC_ACCOUNT_ID=4488773
    volumes:
      - ./magento2:/var/www/html
      - ./magento2/var/log:/var/www/html/var/log
    container_name: magento_php
    ports:
      - "9000:9000"
    hostname: local.magento2.com
    links:
      - mariadbserver
      - elasticsearch
      - logstash
      - kibana
      - redis
      - rabbitmq
      - mailhog
    networks:
      - magento2-network
    depends_on:
      - mariadbserver
      - elasticsearch
      - logstash
      - kibana
      - redis
      - rabbitmq
      - mailhog

  mariadbserver:
    image: mariadb:10.6
    command: --innodb-use-native-aio=0
    ports:
      - "3307:3306"
    environment:
      MARIADB_USER: admin
      MARIADB_PASSWORD: admin
      MARIADB_DATABASE: magento
      MARIADB_ROOT_PASSWORD: root
    container_name: magento_mariadb
    volumes:
      - mariadbdata:/var/lib/mysql
      - ./Docker/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - magento2-network
    hostname: mariadbserver

  elasticsearch:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    container_name: magento_elasticsearch
    networks:
      - elastic-net
      - magento2-network
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 4g
    hostname: elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.1
    container_name: magento_logstash
    volumes:
      - ./Docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./magento2/var/log:/var/log/magento2
      - ./magento2/var/data:/var/log/magento2/data
      - logstashdata:/usr/share/logstash/data
    ports:
      - "5044:5044"
    networks:
      - magento2-network
    depends_on:
      - elasticsearch
    hostname: logstash

  filebeat:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.filebeat
    container_name: magento_filebeat
    user: root
    volumes:
      - ./Docker/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./magento2/var/log:/var/log/magento2
      - ./magento2/var/data:/var/log/magento2/data
    networks:
      - magento2-network
    depends_on:
      - logstash
    hostname: filebeat


  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: magento_kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    volumes:
      - kibanadata:/usr/share/kibana/data
    networks:
      - magento2-network
    depends_on:
      - elasticsearch
    hostname: kibana

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    container_name: magento_redis
    volumes:
      - redisdata:/data
    networks:
      - magento2-network
    hostname: redis

  mailhog:
    image: mailhog/mailhog
    container_name: magento_mailhog
    ports:
      - "8025:8025"
    networks:
      - magento2-network

  rabbitmq:
    image: rabbitmq:management
    container_name: magento_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    networks:
      - magento2-network

  nginx:
    image: nginx:latest
    container_name: magento_nginx
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/metrics.conf:/etc/nginx/conf.d/metrics.conf:ro
      - ./magento2:/var/www/html
    networks:
      - magento2-network
    depends_on:
      - magento
    hostname: nginx

  agent:
    container_name: newrelic-infra
    build:
      context: .
      dockerfile: ./Docker/newrelic-infra.dockerfile
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    volumes:
      - "newrelicdata:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
    networks:
      - magento2-network
    hostname: newrelic-infra

  varnish:
    image: varnish:latest
    container_name: magento_varnish
    restart: always
    ports:
      - "6081:6081"
      - "6082:6082"
    depends_on:
      - nginx
      - magento
    networks:
      - magento2-network
    volumes:
      - ./Docker/varnish/default.vcl:/etc/varnish/default.vcl
    command: ["varnishd", "-F", "-a", ":6081", "-T", "localhost:6082", "-f",
              "/etc/varnish/default.vcl", "-s", "malloc,256m"]
    hostname: varnish

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./Docker/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - magento2-network
      - mysql-network
    hostname: prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    networks:
      - magento2-network
      - mysql-network
    hostname: grafana
    volumes:
      - grafana_data:/var/lib/grafana

  mysql-exporter:
    image: prom/mysqld-exporter
    ports:
      - "9104:9104"
    environment:
      DATA_SOURCE_NAME: "root:root@(mariadbserver:3307)/"
    volumes:
      - ./Docker/mariadb/.my.cnf:/cfg/.my.cnf
    command:
      - "--config.my-cnf=/cfg/.my.cnf"
    networks:
      - magento2-network

  php-fpm-exporter:
    image: hipages/php-fpm_exporter
    ports:
      - "9253:9253"
    environment:
      PHP_FPM_SCRAPE_URI: "http://magento_php:9000/status"
    networks:
      - magento2-network
  
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_prometheus_exporter
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://nginx:8080/stub_status'
    networks:
      - magento2-network
    depends_on:
      - nginx
  
  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:latest
    container_name: elasticsearch_exporter
    ports:
      - "9114:9114"
    environment:
      - LOG_LEVEL=info
      - ES_URI=http://elasticsearch:9200
      - ES_TIMEOUT=30s
    networks:
      - magento2-network
    depends_on:
      - elasticsearch

networks:
  elastic-net:
    driver: bridge
  magento2-network:
    driver: bridge
  mysql-network:
    driver: bridge

volumes:
  esdata:
    driver: local
  redisdata:
    driver: local
  mariadbdata:
    driver: local
  newrelicdata:
    driver: local
  logstashdata:
    driver: local
  kibanadata: 
    driver: local
  grafana_data:
    driver: local
